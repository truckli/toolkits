#!/bin/sh
# ztools
#Append to a file.

##################################################33


####################################################################
# A pile of global variables, please edit them according to your purpose
####################################################################

cmdname="zappf";
version="2012 alpha"
#formula: cmdname options values parameters
formula="$cmdname [option] filename line-string";
func="Append a line to a file. No new file will be created.";
# Option names
options="f t v h";
loptions="file timestamp version help"
# Option value names. 0 for a no-value option.
values="filename 0 0 0";
# Enable no-option mode when nonop=1, when it is legal for zero option
nonop=0;
# Number of parameters taken 
# minpara <= number of parameters <= maxpara
minpara=0;
maxpara=390;


#item separator symbol
isep="@zitem@"
#line separator symbol, to require a newline when printing
lsep="@zline@"

# Option explanations. Separate each other with ${isep} sign.
# Within each explanation content, use ${lsep} sign when ever you want to 
# start a new line when printing.
# A pair of doubly written signs results into a string with no special meaning
# For instance, "${lsep}${lsep}" prints just one "${lsep}" instead of "\n"
optexpl="Apend a line to file\
@zitem@Apend a line and a time stamp to file filename\
@zitem@Print version info\
@zitem@Print help info";
# Notice:options, values and optexpl must contain the same number of items.

#Action when no argument is given
# Need redefination.
defaultop()
{
	echo "Type $cmdname -h for help"
	exit 1;
}


. libzutil.sh

####################################################################
#Procedure design. Unreusable part.
####################################################################



####################################################################
#Here we start our main program
####################################################################


if [ $on_h -eq 1 ]
then
	zusage;
fi

if [ $on_v -eq 1 ]
then
	zversion
fi


if [ $on_f -eq 0 ]
then
	zusage
fi

filename=$value_f

if [ ! -w $filename ]
then
	echo "Unable to write file $filename "
	exit 1;
fi

if [ $parac -eq 0 ]
then
	echo "You did not specify any words to append to $filename"
	exit 1;
fi


#i=1;
#while [ $i -le $parac ]
#do
	#eval word='$'para$i
	#echo -n " $word" >> $filename
	#i=$(($i+1))
#done

echo -n $paras >> $filename

if [ $on_t -eq 1 ]
then
	date -d "now" +"(Recorded at %Y-%m-%d %H:%M)" >> $filename
else
	echo "" >> $filename
fi


cat $filename

