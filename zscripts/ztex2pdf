#!/bin/sh
# ztools
#Append to a file.

##################################################33


####################################################################
# A pile of global variables, please edit them according to your purpose
####################################################################

cmdname="ztex2pdf";
version="2012 alpha"
#formula: cmdname options values parameters
formula="$cmdname option | texfile";
func="Call xelatex to compile a tex file, and do some clean up";
# Option names
options="d v h p";
loptions="double version help purge"
# Option value names. 0 for a no-value option.
values="0 0 0 0";
# Enable no-option mode when nonop=1, when it is legal for zero option
nonop=1;
# Number of parameters taken 
# minpara <= number of parameters <= maxpara
minpara=0;
maxpara=1;


#item separator symbol
isep="@zitem@"
#line separator symbol, to require a newline when printing
lsep="@zline@"

# Option explanations. Separate each other with ${isep} sign.
# Within each explanation content, use ${lsep} sign when ever you want to 
# start a new line when printing.
# A pair of doubly written signs results into a string with no special meaning
# For instance, "${lsep}${lsep}" prints just one "${lsep}" instead of "\n"
optexpl="Double compile a tex file\
@zitem@Print version info\
@zitem@Print help info\
@zitem@Purge temporary files and quit";
# Notice:options, values and optexpl must contain the same number of items.

#Action when no argument is given
# Need redefination.
defaultop()
{
	echo "Type $cmdname -h for help"
	exit 1;
}


. libzutil.sh

####################################################################
#Procedure design. Unreusable part.
####################################################################
clean_up()
{
    rm -f ${nametruck}.aux
    rm -f ${nametruck}.log
}



####################################################################
#Here we start our main program
####################################################################


if [ $on_h -eq 1 ]
then
    zusage
fi

if [ $on_v -eq 1 ]
then
    zversion
fi

nametruck=${para1%.tex}

if [ $on_p -eq 1 ]
then
    clean_up
    exit 0
fi

texfile=${nametruck}.tex
xelatex $texfile

if [ $on_d -eq 1 ]
then
    xelatex $texfile
fi

clean_up
evince ${nametruck}.pdf &


